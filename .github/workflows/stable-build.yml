### This workflow setup instance then build and push images ###
name: Multi-arch build stable
run-name: ${{ inputs.tag }} (${{ inputs.release_number }})

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for release (ex. 1.2.3.45)'
        type: string
        required: true
      release_number:
        description: 'Sequence number of the release (ex. x.x.x.<number>)'
        type: string
        required: true
        default: '1'

env:
  COMPANY_NAME: "qinglion"
  PRODUCT_NAME: "documentserver"
  VERSION: ${{ github.event.inputs.tag }}
  RELEASE_NUMBER: ${{ github.event.inputs.release_number }}

jobs:
  build:
    name: "Release image: DocumentServer${{ matrix.edition }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        images: ["documentserver-stable"]
        edition: ["", "-ee", "-de"]
    steps:
      - name: Checkout code 
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
     
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_HUB_REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build documentserver-release
        env:
          TARGET: ${{ matrix.images }}
          PRODUCT_EDITION: ${{ matrix.edition }}
          REGISTRY: ${{ secrets.DOCKER_HUB_REGISTRY }}
        run: |
          set -eux
          TESTING_IMAGE=${COMPANY_NAME}/4testing-${PRODUCT_NAME}${PRODUCT_EDITION}
            export PRODUCT_EDITION
            export PULL_TAG=${VERSION}
            export TAG=${VERSION%.*}.${RELEASE_NUMBER}
            export SHORTER_TAG=${VERSION%.*}
            export SHORTEST_TAG=${VERSION%.*.*}
            docker buildx bake -f docker-bake.hcl "${TARGET}" --push
            echo "DONE: Build success >> exit with 0"
            exit 0
        shell: bash

  build-nonexample:
    name: "Release image: DocumentServer${{ matrix.edition }}-nonExample"
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ false }}
    strategy:
      fail-fast: false
      matrix:
        images: ["documentserver-nonexample"]
        edition: ["", "-ee", "-de"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_HUB_REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: build image
        env:
          TARGET: ${{ matrix.images }}
          PRODUCT_EDITION: ${{ matrix.edition }}
          REGISTRY: ${{ secrets.DOCKER_HUB_REGISTRY }}
        run: |
          set -eux
          export PULL_TAG=${VERSION%.*}.${RELEASE_NUMBER}
          export TAG=${VERSION%.*}.${RELEASE_NUMBER}
          docker buildx bake -f docker-bake.hcl "${TARGET}" --push
        shell: bash
